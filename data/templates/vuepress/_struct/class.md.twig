
{% set elem = class %}
## {{ include('_blocks/name.md.twig') }} {{ include('_blocks/badges.md.twig') }}

{{ class.summary|replace({'#### ': '- ', '### ': '- ', '## ': '- ', '# ': '- ',})|raw }}

{{ class.description|replace({'#### ': '- ', '### ': '- ', '## ': '- ', '# ': '- ',})|raw }}

{#- Class and parent interfaces -#}
{% set interfaces = [] %}
{#- Class and parent traits -#}
{% set traits = [] %}

{% macro getRecursiveInterfaces(targetClass) %}
  {%- import _self as self -%}

  {%- if targetClass -%}
    {%- for interface in targetClass.interfaces -%}
    {{- interface|trim('\\', 'left') -}},
    {%- endfor -%}

    {{- self.getRecursiveInterfaces(targetClass.parent) -}}

  {%- endif -%}
{% endmacro %}

{% macro getRecursiveTraits(targetClass, includeTraitsInTraits) %}
  {%- import _self as self -%}

  {%- if targetClass -%}
    {{- targetClass.usedTraits|join(',') -}},

    {{- self.getRecursiveTraits(targetClass.parent, includeTraitsInTraits) -}}

    {%- if includeTraitsInTraits -%}
      {%- for trait in targetClass.usedTraits -%}
        {{- self.getRecursiveTraits(trait, includeTraitsInTraits) -}}
      {%- endfor -%}
    {%- endif -%}

  {%- endif -%}
{% endmacro %}

{% import _self as self %}
{% set interfacesText = self.getRecursiveInterfaces(class) %}
{% set traitsText = self.getRecursiveTraits(class, false) %}

{#- Convert to array, sort and remove duplicates -#}
{% for name in interfacesText|trim(', ')|split(',')|sort %}
    {%- set interfaces = interfaces|merge({ (name): (name|split('\\')|last) }) -%}
{% endfor %}

{% for name in traitsText|trim(', ')|split(',')|sort %}
    {%- set traits = traits|merge({ (name): (name|split('\\')|last) }) -%}
{% endfor %}

|     |     |
| ---:|:--- |
| **Extends** |
    {%- if class.parent -%}
        [{{ class.parent.namespace|trim('\\') -}}\\<span style="font-weight: bold;">{{ class.parent.name }}</span>](classes.html#
        {{- class.parent|trim('\\')|lower|replace({'\\': '-'}) }})
    {%- else -%}
        _Nothing_
    {%- endif -%}
|
| **Implements** |
    {%- for iname, ishort in interfaces if ishort is not empty -%}
        [{{ iname|trim('\\')|split('\\')|slice(0, -1)|join('\\') }}\\<span style="font-weight: bold;">{{ ishort }}</span>](interfaces.html#
        {{- iname|lower|replace({'\\': '-'}) }}) <br />
    {%- else -%}
        _Nothing_
    {%- endfor -%}
|
| **Uses** |
    {%- for tName, tShort in traits if tShort is not empty -%}
        [{{ tName|trim('\\')|split('\\')|slice(0, -1)|join('\\') }}\\<span style="font-weight: bold;">{{ tShort }}</span>](traits.html#
        {{- tName|trim('\\')|lower|replace({'\\': '-'}) }}) <br />
    {%- else -%}
        _Nothing_
    {%- endfor -%}
|

{{ include('_tables/metadata.md.twig', { elem: class }) }}

### <span style="display: none;">{{ class }}</span> Constants
{# Lista de constantes #}
{% for constant in class.constants|sort_asc %}
    {{ include('_member/constant.md.twig') }}
{% else %}
> This class has not constants.
{% endfor %}

{% set methodsList = [] %}
### <span style="display: none;">{{ class }}</span> Methods
{# Lista de métodos públicos y protegidos #}
{% for method in class.methods|sort_asc %}
{% set methodsList = methodsList|merge([method.name]) %}
  {{ include('_member/method.md.twig') }}
{% else %}
> This class has not methods.
{% endfor %}

#### <span style="display: none;">{{ class }}</span> Inherited methods
{# Lista de métodos públicos y protegidos #}
{% for method in class.inheritedMethods if method.name not in methodsList -%}
  {%- if method.parent in project.indexes.classes %}
    {%- set parent_location = 'classes' %}
  {%- elseif method.parent in project.indexes.interfaces %}
    {%- set parent_location = 'interfaces' %}
  {%- else %}
    {%- set parent_location = 'traits' %}
  {%- endif %}

- [{{ method.parent.namespace|trim('\\') -}}\\<span style="font-weight: bold;">{{ method.parent.name }}</span>]({{ parent_location }}.html#
  {{- method.parent|trim('\\')|lower|replace({'\\': '-'}) -}}
  )::
  {{- include('_blocks/anchor-link-method.md.twig', { text: method.name ~ '()' }) -}}
  {{ include('_blocks/badges.md.twig', { elem: method }) }}
{% else %}
> This class has not inherited methods.
{% endfor %}

{% set propertiesList = [] %}
### <span style="display: none;">{{ class }}</span> Properties
{# Lista de propiedades públicas y protegidas #}
{% for property in class.properties|merge(class.magicProperties|default([]))|sort_asc %}
{% set propertiesList = propertiesList|merge([property.name]) %}
  {{ include('_member/property.md.twig') }}
{% else %}
> This class has not properties.
{% endfor %}

#### <span style="display: none;">{{ class }}</span> Inherited properties
{# Lista de métodos públicos y protegidos #}
{% for property in class.inheritedProperties if property.name not in propertiesList -%}
  {%- if property.parent in project.indexes.classes %}
    {%- set parent_location = 'classes' %}
  {%- elseif property.parent in project.indexes.interfaces %}
    {%- set parent_location = 'interfaces' %}
  {%- else %}
    {%- set parent_location = 'traits' %}
  {%- endif %}

- [{{ property.parent.namespace|trim('\\') -}}\\<span style="font-weight: bold;">{{ property.parent.name }}</span>]({{ parent_location }}.html#
  {{- property.parent|trim('\\')|lower|replace({'\\': '-'}) -}}
  )::
  {{- include('_blocks/anchor-link-property.md.twig', { text: '$' ~ property.name  }) -}}
  {{ include('_blocks/badges.md.twig', { elem: property }) }}
{% else %}
> This class has not inherited properties.
{% endfor %}
